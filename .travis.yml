# sudo: required
language: bash
services: docker

env:
  global:
    - REGISTRY_USER=storagebofh
    - secure: n+XNzMYj5EINxkZ4k1zzKgzzbq0JVlqjXtqswJ081yYS338klONJQPlCbrtkWMOXi/B9ZmrwLQdmMj9QpG5DGsBbqDB46fbIhDPnC6Qx4xPqfIm+jb0fwZpXbh8gNYxwLeLldTib1gfQnzFCJhjuNGz4D5LKBu7lwWDp0/LWyr7Ttuioh1eW/dk1w+UxWzEHdqNGoQioQUPpPA54X4FJZLVWBl8HqabctGWLpB5aeec+blhVlfl7sdCr5aYNFxlgHQtIFPm0RKF29/rS8UPK5LQmvssYN876dKPpaHV2NIJnXoeyeCnPGQotAQiWCDRSh126CWcMsFuVZ/GIU4EhSguzRLps7Cr+PPMFpoiW4EiLwevozWCI8YuhdJN34ClXTSG+z7MuwdYXUkvntzx8p41m/CNdYmKIZdAISbNemeoecYfsauaRYCfhaJzrIRJlARFFVy5ZS5a6Na77q7rxaZCrZac1wqJXadzrMaspvotVoB7F+PTO086JSuLpBVOr3bXC3XgEIEpSuR5ynZXb4Ma6RJMFgD2yXTUlsOYw0Bntv5SodSBCdoiVStuNUHpBYM9QyPxARaRnAuALvBNfU76nBoAzgpSgkZlDm3WFc5f9f1+6Hu1cvbQZ+/9+OQB+RRloixh7yna0oRXxnwdg2xdz27rJ8lfF88hpRUM3FeU=
  matrix:
    - COMPILER=gcc VERSION=4.8
    # - COMPILER=gcc VERSION=4.9
    # - COMPILER=gcc VERSION=5.4
    # - COMPILER=gcc VERSION=6.5
    # - COMPILER=gcc VERSION=7.4
    # - COMPILER=gcc VERSION=8.1
    # - COMPILER=gcc VERSION=9.1
    # - COMPILER=gcc VERSION=latest
    # - COMPILER=clang VERSION=3.6
    # - COMPILER=clang VERSION=3.7
    # - COMPILER=clang VERSION=3.8
    # - COMPILER=clang VERSION=3.9
    # - COMPILER=clang VERSION=4.0
    # - COMPILER=clang VERSION=5.0
    # - COMPILER=clang VERSION=6.0
    # - COMPILER=clang VERSION=7.1
    # - COMPILER=clang VERSION=8.0
    # - COMPILER=clang VERSION=9.0
    # - COMPILER=clang VERSION=latest

before_script:
  - env | sort
  - cd "$COMPILER"/"$VERSION"
  - image="$COMPILER:$VERSION"

script:
  - |
    (
      set -Eeuo pipefail
      set -x
      docker build -t "$image" .
      docker run -ti --rm "$image" "$COMPILER" --version
    )

after_script:
  - docker images

before_deploy:
  - echo $REGISTRY_USER
  - echo $REGISTRY_PASS
  - docker login -u "$REGISTRY_USER" -p $REGISTRY_PASS

deploy:
  provider: script
  script: 
    - docker images

